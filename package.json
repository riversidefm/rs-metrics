{
  "name": "rs-metrics-service",
  "version": "0.0.1",
  "description": "rs-metrics service - A NestJS microservice with GraphQL API, database integration, and full infrastructure setup",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "// === Quick Start Commands ===": "",
    "setup": "npm run setup:env && npm run setup:infra && npm run setup:db && npm run gql:generate:types",
    "dev": "npm run infra:up && npm run db:ready && NODE_ENV=development npm run start:dev",
    "start": "NODE_ENV=development npm run start:dev",
    
    "// === Setup Commands ===": "",
    "setup:env": "cp .env.example .env",
    "setup:infra": "docker compose up -d",
    "setup:db": "npm run db:generate && npm run db:migrate",
    "setup:clean": "npm run infra:down && docker volume prune -f && npm run setup",
    
    "// === Build & Development ===": "",
    "build": "nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start:dev": "NODE_ENV=development nest start --watch",
    "start:debug": "NODE_ENV=development nest start --debug --watch",
    "start:prod": "node dist/src/main",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    
    "// === Testing ===": "",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    
    "// === Infrastructure ===": "",
    "infra:up": "docker compose up -d",
    "infra:down": "docker compose down",
    "infra:logs": "docker compose logs -f",
    "infra:status": "docker compose ps",
    "infra:clean": "docker compose down -v --rmi all",
    
    "// === Database ===": "",
    "db:generate": "prisma generate --schema=./prisma/schema",
    "db:migrate": "prisma migrate dev --schema=./prisma/schema",
    "db:migrate:prod": "prisma migrate deploy --schema=./prisma/schema",
    "db:studio": "prisma studio --schema=./prisma/schema",
    "db:reset": "prisma migrate reset --schema=./prisma/schema --force",
    "db:format": "prisma format --schema=./prisma/schema",
    "db:ready": "npm run db:wait && npm run db:generate",
    "db:wait": "node scripts/wait-for-db.js",
    
    "// === GraphQL ===": "",
    "gql:generate:types": "graphql-codegen --config node_modules/@riversidefm/graphql/schema/codegen.yml",
    "gql:playground": "open http://localhost:3000/graphql",
    
    "// === Health & Monitoring ===": "",
    "health": "curl -f http://localhost:3000/health || echo 'Service not healthy'",
    "health:deep": "curl -f http://localhost:3000/health/ready || echo 'Service not ready'",
    
    "// === Development Helpers ===": "",
    "clean": "rm -rf dist node_modules/.cache",
    "logs": "docker compose logs -f rs-metrics-service-app",
    "shell": "docker compose exec rs-metrics-service-app sh",
    "postinstall": "npm run setup:env && npm run db:generate"
  },
  "dependencies": {
    "@nestjs/common": "^11.1.2",
    "@nestjs/config": "^4.0.2",
    "@nestjs/core": "^11.1.2",
    "@nestjs/platform-express": "^11.1.2",
    "@nestjs/swagger": "^11.2.0",
    "@nestjs/microservices": "^11.1.5",
    "@prisma/client": "^6.8.2",
    "@riversidefm/bootstrap": "^1.3.1",
    "@riversidefm/graphql": "^1.6.0",
    "@riversidefm/database": "^1.1.5",
    "@riversidefm/feature-flags": "^1.0.2",
    "@riversidefm/logger": "^1.0.2",
    "@riversidefm/protos": "latest",
    "@riversidefm/events": "^1.1.23",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.2",
    "launchdarkly-node-server-sdk": "^7.0.4",
    "pino": "^9.7.0",
    "pino-pretty": "^13.0.0",
    "prisma": "^6.8.2",
    "reflect-metadata": "^0.2.2",
    "rxjs": "^7.8.1",
    "swagger-ui-express": "^5.0.1",
    "uuid": "^11.1.0",
    "zod": "^3.22.4",
    "dotenv": "^16.4.5"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3.2.0",
    "@eslint/js": "^9.18.0",
    "@faker-js/faker": "^9.8.0",
    "@nestjs/cli": "^11.0.0",
    "@nestjs/schematics": "^11.0.0",
    "@nestjs/testing": "^11.1.2",
    "@swc/cli": "^0.6.0",
    "@swc/core": "^1.10.7",
    "@types/express": "^5.0.0",
    "@types/jest": "^29.5.14",
    "@types/node": "^22.10.7",
    "@types/supertest": "^6.0.2",
    "@types/uuid": "^10.0.0",
    "cross-env": "^7.0.3",
    "dotenv-cli": "^8.0.0",
    "eslint": "^9.18.0",
    "eslint-config-prettier": "^10.0.1",
    "eslint-plugin-prettier": "^5.2.2",
    "globals": "^16.0.0",
    "jest": "^29.7.0",
    "jiti": "^2.4.2",
    "prettier": "^3.4.2",
    "source-map-support": "^0.5.21",
    "supertest": "^7.0.0",
    "ts-jest": "^29.2.5",
    "ts-loader": "^9.5.2",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.7.3",
    "typescript-eslint": "^8.20.0"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  }
}
